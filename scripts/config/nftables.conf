#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

# drop any existing nftables ruleset
flush ruleset

# a common table for both IPv4 and IPv6
table inet filter {
	set trusted_interfaces {
		type ifname
		elements = { "lo", "lxdbr0" }
	}

	chain input {
		counter comment "Count input packets"
		# Drop by default
		type filter hook input priority filter; policy accept;

		ct state invalid drop comment "Drop invalid connections"

		iifname @trusted_interfaces accept comment "Accept any traffic from trusted interfaces"
		oifname @trusted_interfaces accept comment "Accept any traffic to trusted interfaces"
		fib daddr . iif type != { local, broadcast, multicast } drop comment "Drop packets if the destination IP address is not configured on the incoming interface (strong host model)"
		ct state { established, related } accept comment "Accept traffic originated from us"

		meta l4proto { icmp, ipv6-icmp } accept comment "Accept ICMP"
		ip protocol igmp accept comment "Accept IGMP"

		udp dport mdns ip6 daddr ff02::fb accept comment "Accept mDNS"
		udp dport mdns ip daddr 224.0.0.251 accept comment "Accept mDNS"

		# Allow specific ports
		# tcp dport { 8080 } accept comment "Open particular ports"

		counter comment "Count input packets that did not match any rule"
	}

	chain forward {
		counter comment "Count forwarding packets"

		# Drop everything forwarded to us unless it is from a trusted interface
		type filter hook forward priority filter; policy accept;

		iifname @trusted_interfaces accept comment "Accept traffic from trusted interfaces"
		oifname @trusted_interfaces accept comment "Allow forwarding to trusted interfaces"

		counter comment "Count forwarding packets that did not match any rule"
	}

	chain output {
		counter comment "Count output packets"

		# Accept every outbound connection
		type filter hook output priority filter; policy accept;
	}

	chain pstrt.lxdbr0 {
		type nat hook postrouting priority srcnat; policy accept;
		
		# Masquerade all packets leaving from lxdbr0 (outgoing to networks not lxdbr0)
		oifname != "lxdbr0" iifname "lxdbr0" masquerade
	}
}
